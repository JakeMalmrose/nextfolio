name: Deploy to Ubuntu NUC

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Deploy to NUC via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # Create the directory if it doesn't exist
          mkdir -p ~/nextfolio
          
          # Check if repository already exists, remove it if it does
          if [ -d ~/nextfolio/.git ]; then
            echo "Repository exists, pulling latest changes..."
            cd ~/nextfolio
            git pull
          else
            echo "Cloning repository..."
            # Clone without verbose output to reduce log size
            git clone https://github.com/JakeMalmrose/nextfolio.git ~/nextfolio
            
            # Don't check exit code of git clone - it returns 0 on success
            cd ~/nextfolio
          fi
          
          # Print repository info
          echo "Repository ready, installing dependencies..."
          
          # Install dependencies (use yarn if available for better performance)
          if command -v yarn &> /dev/null; then
            yarn install
          else
            npm install
          fi
          
          # Build the application 
          echo "Building application..."
          npm run build
          
          # Start or restart with PM2 - use absolute path
          echo "Starting/restarting with PM2..."
          PATH=$PATH:$(npm bin -g)
          PM2_PATH=$(which pm2)
          $PM2_PATH restart nextfolio || $PM2_PATH start npm --name "nextfolio" -- start
          
          # Print success message at the end to confirm completion
          echo "Deployment completed successfully!"