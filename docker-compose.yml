services:
  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=nextfolio
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=nextfolio
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.next
    restart: unless-stopped
    ports:
      - "3001:3000"
    networks:
      - web
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://nextfolio:${POSTGRES_PASSWORD}@postgres:5432/nextfolio?schema=public
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=malmrose.com
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - web
    depends_on:
      - nextjs
      - pgadmin
      - openwebui

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@malmrose.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - web
    depends_on:
      - postgres

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    volumes:
      - open-webui:/app/backend/data
    networks:
      - web
    env_file:
      - .env
    environment:
      - ENABLE_OAUTH_SIGNUP=True
      - ENABLE_LOGIN_FORM=False
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_OAUTH_SCOPE=${GOOGLE_OAUTH_SCOPE}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
networks:
  web:
    driver: bridge

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  open-webui:
    driver: local
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local